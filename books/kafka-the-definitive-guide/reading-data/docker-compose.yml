version: '3.7'

services:
  zoo:
    image: bitnami/zookeeper:3.7
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    environment:
      ALLOW_ANONYMOUS_LOGIN: "true"
      ZOO_PORT_NUMBER: 2181
      ZOO_SERVER_ID: 1
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 20
      ZOO_SYNC_LIMIT: 5
      ZOO_SERVERS: zoo:2888:3888
    volumes:
      - ./data:/bitnami
  kafka:
    image: bitnami/kafka:3.4.1
    container_name: kafka
    ports:
      - "9094:9094"
    networks:
      - kafka-net
    environment:
      - BITNAMI_DEBUG=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
    volumes:
      - ./data:/bitnami
    depends_on:
      - zoo
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zoo:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    depends_on:
      - kafka
  schema-registry:
    container_name: schema-registry
    image: bitnami/schema-registry:7.3.3
    ports:
      - "8081:8081"
    networks:
      - kafka-net
    environment:
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://kafka:9092
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_CLIENT_AUTHENTICATION=NONE
    volumes:
      - ./data:/bitnami


volumes:
  zoo:
    driver: local
  kafka:
    driver: local
  schema-registry:
    driver: local

networks:
  kafka-net:
    driver: bridge